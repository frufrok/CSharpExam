{
	"info": {
		"_postman_id": "40b078c3-c178-4a66-93d2-67b9feb268d0",
		"name": "PostmanTest",
		"description": "# ‚õìÔ∏è Get started here\n\nPostman allows you to test your APIs using simple Javascript code. You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## üîñ **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\".\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" alt=\"\" height=\"103\" width=\"266\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## ‚ÑπÔ∏è Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37683015"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"An access token is returned\", () => {",
							"    pm.expect(pm.response.json()).to.have.property('token')",
							"    pm.expect(pm.response.json().token).to.be.a('string')",
							"    // Set the collection-scope \"token\" variable to the token received from the API",
							"    // This lets us use it in other requests",
							"    pm.collectionVariables.set('token', pm.response.json().token)",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": []
		},
		{
			"name": "LoginByAdmin1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"token\", pm.response.text(), String);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7262/Login/Login?email=user1%40mail.ru&password=Password1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Login",
						"Login"
					],
					"query": [
						{
							"key": "email",
							"value": "user1%40mail.ru"
						},
						{
							"key": "password",
							"value": "Password1"
						}
					]
				},
				"description": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the¬†`token`¬†collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned."
			},
			"response": []
		},
		{
			"name": "GetIdFromToken",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Restricted/GetIdFromToken",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Restricted",
						"GetIdFromToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddAdmin",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Restricted/GetIdFromToken",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Restricted",
						"GetIdFromToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginByAdmin2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"token\", pm.response.text(), String);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7262/Login/Login?email=user1%40mail.ru&password=Password1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Login",
						"Login"
					],
					"query": [
						{
							"key": "email",
							"value": "user1%40mail.ru"
						},
						{
							"key": "password",
							"value": "Password1"
						}
					]
				},
				"description": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the¬†`token`¬†collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned."
			},
			"response": []
		},
		{
			"name": "DeleteAdmin1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Restricted/GetIdFromToken",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Restricted",
						"GetIdFromToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Restricted/GetIdFromToken",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Restricted",
						"GetIdFromToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginByUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"token\", pm.response.text(), String);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Login/Login?email=user3%40mail.ru&password=Password3",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Login",
						"Login"
					],
					"query": [
						{
							"key": "email",
							"value": "user3%40mail.ru"
						},
						{
							"key": "password",
							"value": "Password3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUsers",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "GetUserGuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var a = pm.response.text();\r",
							"var b = a.replace(\"\\\"\", \"\").replace(\"\\\"\", \"\")\r",
							"pm.collectionVariables.set(\"userGuid\", b, String);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/User/GetUserGuid?email=user2%40mail.ru",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"User",
						"GetUserGuid"
					],
					"query": [
						{
							"key": "email",
							"value": "user2%40mail.ru"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserEmail",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/User/GetUserEmail?guid={{userGuid}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"User",
						"GetUserEmail"
					],
					"query": [
						{
							"key": "guid",
							"value": "{{userGuid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "SendMessage1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Restricted/GetIdFromToken",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Restricted",
						"GetIdFromToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "SendMessage2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Restricted/GetIdFromToken",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Restricted",
						"GetIdFromToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginByAdmin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"token\", pm.response.text(), String);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7262/Login/Login?email=user3%40mail.ru&password=Password3",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7262",
					"path": [
						"Login",
						"Login"
					],
					"query": [
						{
							"key": "email",
							"value": "user3%40mail.ru"
						},
						{
							"key": "password",
							"value": "Password3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetMessages",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userGuid",
			"value": "\"\"",
			"type": "string"
		},
		{
			"key": "token",
			"value": "\"\""
		},
		{
			"key": "baseUrl",
			"value": "https://localhost:7142/"
		}
	]
}